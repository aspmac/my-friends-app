{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","width","height","src","CardList","robots","map","user","i","username","SearchBox","searchField","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,KAAKC,EAAc,EAAdA,MAAMC,EAAQ,EAARA,GACzB,OAEC,sBAAKC,UAAU,qDAAf,UACC,qBAAKC,IAAI,OAAOC,MAAM,MAAMC,OAAO,MAAMC,IAAG,+BAA0BL,KACtE,gCACC,6BAAKF,IACL,4BAAIC,WCcOO,EApBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAECA,EAAOC,KAAI,SAACC,EAAKC,GAChB,OACC,cAAC,EAAD,CAECV,GAAIO,EAAOG,GAAGV,GACdF,KAAMS,EAAOG,GAAGZ,KAChBa,SAAUJ,EAAOG,GAAGC,SACpBZ,MAAOQ,EAAOG,GAAGX,OAJZW,SCKIE,EAbG,SAAC,GAAgC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aAChC,OACC,qBAAKb,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVc,KAAK,SACLC,YAAY,kBACZC,SAAUH,OCCEI,EARA,SAACC,GACf,OACC,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAO,kBAAmBlB,OAAO,SAAnE,SACEe,EAAMI,YCgBKC,E,kDAnBd,WAAYL,GAAO,IAAD,8BACjB,cAAMA,IACDM,MAAM,CACVC,UAAU,GAHM,E,qDAOlB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAGG,KAAKJ,MAAMC,SACN,0DAEDG,KAAKV,MAAMI,a,GAhBOQ,aCmDZC,G,wDA3Cb,aAAc,IAAD,8BACX,gBAaJC,eAAiB,SAACC,GAChB,EAAKJ,SAAS,CAAEjB,YAAaqB,EAAMC,OAAOC,SAbxC,EAAKX,MAAO,CACVlB,OAAQ,GACRM,YAAa,IAJJ,E,qDAQf,WAAoB,IAAD,OACjBwB,MAAM,4CACLC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAE,EAAKX,SAAS,CAACvB,OAAQkC,S,oBAQtC,WAAS,IAAD,OACAC,EAAiBb,KAAKJ,MAAMlB,OAAOoC,QAAO,SAAAC,GAC9C,OAAOA,EAAM9C,KAAK+C,cAAcC,SAAS,EAAKrB,MAAMZ,YAAYgC,kBAElE,OAAgC,IAA7BhB,KAAKJ,MAAMlB,OAAOwC,OACZ,yCAGH,sBAAK9C,UAAU,KAAf,UACE,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWa,aAAce,KAAKI,iBAC9B,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,CAAU1B,OAAQmC,e,GAjCdX,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dd226459.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name,email,id}) => {\r\n\treturn (\r\n\t\t\r\n\t\t<div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow5\">\r\n\t\t\t<img alt=\"user\" width=\"250\" height=\"250\" src={`https://robohash.org/${id}`}/>\r\n\t\t\t<div>\r\n\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t<p>{email}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) => {\r\n\treturn(\r\n\t\t<div>\r\n\t\t\t{\r\n\t\t\trobots.map((user,i) => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Card \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tid={robots[i].id} \r\n\t\t\t\t\t\tname={robots[i].name} \r\n\t\t\t\t\t\tusername={robots[i].username} \r\n\t\t\t\t\t\temail={robots[i].email}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t);\r\n\t\t\t\t})\r\n\t\t\t}\r\n    \t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchField, searchChange}) => {\r\n\treturn(\r\n\t\t<div className='pa2'>\r\n\t\t\t<input \r\n\t\t\tclassName='pa3 ba b--green bg-lightest-blue' \r\n\t\t\ttype=\"search\" \r\n\t\t\tplaceholder=\"search contacts\"\r\n\t\t\tonChange={searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style={{overflowY: 'scroll', border:'5px solid black', height:'800px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Scroll;","import React, { Component } from 'react';\r\nclass ErrorBoundry extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state={\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError: true})\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Oooops. That is not good</h1>\r\n\t\t}\r\n\t\treturn this.props.children\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundry","import React, {Component} from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor(){\n    super()\n    this.state= {\n      robots: [],\n      searchField: ''\n    }\n  }\n\ncomponentDidMount(){\n  fetch('https://jsonplaceholder.cypress.io/users')\n  .then(response=>response.json())\n  .then(users=>this.setState({robots: users}));\n}\n\nonSearchChange = (event) => {\n  this.setState({ searchField: event.target.value })\n}\n\n\nrender(){\n  const filteredRobots = this.state.robots.filter(robot => {\n    return robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n  })\n  if(this.state.robots.length === 0){\n    return <h1>Loading</h1>\n  } else{\n      return (\n        <div className='tc'>\n          <h1 className='f1'>My Contacts</h1>\n          <SearchBox searchChange={this.onSearchChange}/>\n          <Scroll>\n            <ErrorBoundry>\n              <CardList robots={filteredRobots}/>\n            </ErrorBoundry>\n          </Scroll>\n        </div>\n      );\n    }\n  } \n}\n \n\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}